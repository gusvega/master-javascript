name: Example Workflow

on: [push]

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.set_output.outputs.result }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'
    - name: Run script and set output
      id: set_output
      run: |
        echo "::set-output name=result::$(node -e 'console.log("output from job1")')"

  job2:
    needs: job1
    runs-on: ubuntu-latest
    outputs:
      output2: ${{ steps.set_output.outputs.result }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'
    - name: Use output from Job 1
      id: set_output
      run: |
        echo "Using output from Job 1: ${{ needs.job1.outputs.output1 }}"
        echo "::set-output name=result::$(node -e 'console.log("output from job2")')"

  job3:
    needs: [job1, job2]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'
    - name: Use outputs from Job 1 and Job 2
      run: |
        echo "Using output from Job 1: ${{ needs.job1.outputs.output1 }}"
        echo "Using output from Job 2: ${{ needs.job2.outputs.output2 }}"
        node -e 'console.log("Final action based on previous outputs")'
